apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "osu-web-chart.fullname" . }}-octane
  labels:
    {{- include "osu-web-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "osu-web-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "osu-web-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "osu-web-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - |
              ln -s /secret-shared-oauth-public-key/oauth-public.key /app/storage/oauth-public.key && \
              ln -s /secret/oauth-private.key /app/storage/oauth-private.key && \
              ln -s /secret/.env /app/.env && \
              su osuweb -c '/app/docker/deployment/entrypoint.sh octane'
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            # httpGet:
              # path: /home
              # port: http
          readinessProbe:
            tcpSocket:
              port: http
            # httpGet:
              # path: /home
              # port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /secret
              name: secret
              readOnly: true
            - mountPath: /secret-shared-oauth-public-key
              name: secret-shared-oauth-public-key
              readOnly: true
            {{- range $storageName, $storage := .Values.config.storage }}
            {{- if eq "local" $storage.driver }}
            - mountPath: /app/public/uploads{{- if not (eq "general" $storageName) -}}-{{ $storageName }}{{- end }}
              name: pvc-{{ $storageName }}
            {{- end }}
            {{- end }}
      volumes:
        - name: secret-shared-oauth-public-key
          secret:
            secretName: {{ include "osu-web-chart.fullname" . }}-shared-oauth-public-key
        - name: secret
          secret:
            secretName: {{ include "osu-web-chart.fullname" . }}
        {{- range $storageName, $storage := .Values.config.storage }}
        {{- if eq "local" $storage.driver }}
        - name: pvc-{{ $storageName }}
          persistentVolumeClaim:
            claimName: {{ include "osu-web-chart.fullname" $ }}-{{ $storageName }}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

# Default values for osu-web-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  chartName: osu-web

config:
  laravel:
    url: http://localhost:8080 # APP_URL
    env: production # APP_ENV
    debug: false # APP_DEBUG
    appKey: "" # APP_KEY
    extraEnv: ""

    sentry: {}
      # url: "" # APP_SENTRY
      # public_url: "" # APP_SENTRY_PUBLIC

    log:
      driver: log # BROADCAST_DRIVER
    logChannel: single # LOG_CHANNEL

    cache:
      driver: file # CACHE_DRIVER
      # localDriver: file # CACHE_DRIVER_LOCAL

    session:
      driver: file # SESSION_DRIVER
      # domain: "" # SESSION_DOMAIN
      # secureCookie: false # SESSION_SECURE_COOKIE

    legacy:
      # sharedInteropSecret: "" # SHARED_INTEROP_SECRET
      banchoBotUserId: "" # BANCHO_BOT_USER_ID

    filesystem: {}
      # disk: local # FILESYSTEM_DISK

    # scoreReplaysStorage: local # SCORE_REPLAYS_STORAGE # Either "s3" or "local".
    # queueDriver: "" # QUEUE_DRIVER

    camo: {}
      # key: "" # CAMO_KEY
      # prefix: "" # CAMO_PREFIX

    oauth:
      publicKey: ""
      privateKey: ""

    # githubToken: "" # GITHUB_TOKEN
    # changelogGithubToken: "" # CHANGELOG_GITHUB_TOKEN

    datadog:
      #enabled: true # DATADOG_ENABLED
      #prefix: osu.web # DATADOG_PREFIX
      #apiKey: "" # DATADOG_API_KEY
      #appKey: "" # DATADOG_APP_KEY
      #host: https://app.datadoghq.com # DATADOG_HOST
      statsd: {}
        #host: localhost # DATADOG_STATSD_HOST
        #port: 8125 # DATADOG_STATSD_PORT
        #socket: "" # DATADOG_STATSD_SOCKET

    payments:
      sandbox: true # PAYMENT_SANDBOX
      storeStaleDays: "" # STORE_STALE_DAYS
      shopify:
        domain: "" # SHOPIFY_DOMAIN
        storeFrontToken: "" # SHOPIFY_STOREFRONT_TOKEN
        webhookKey: "" # SHOPIFY_WEBHOOK_KEY
      paypal:
        url: https://www.sandbox.paypal.com/cgi-bin/webscr # PAYPAL_URL
        merchantId: "" # PAYPAL_MERCHANT_ID
        clientId: "" # PAYPAL_CLIENT_ID
        clientSecret: "" # PAYPAL_CLIENT_SECRET
        noShippingExperienceProfileId: "" # PAYPAL_NO_SHIPPING_EXPERIENCE_PROFILE_ID
      xsolla:
        apiKey: "" # XSOLLA_API_KEY
        merchantId: "" # XSOLLA_MERCHANT_ID
        projectId: "" # XSOLLA_PROJECT_ID
        secretKey: "" # XSOLLA_SECRET_KEY
      centili:
        apiKey: "" # CENTILI_API_KEY
        secretKey: "" # CENTILI_SECRET_KEY
        conversionRate: "" # CENTILI_CONVERSION_RATE
        widgetUrl: https://api.centili.com/payment/widget # CENTILI_WIDGET_URL

    notifications:
      queue: notification # NOTIFICATION_QUEUE
      store:
        channel: test # STORE_NOTIFICATION_CHANNEL
        queue: store-notifications # STORE_NOTIFICATIONS_QUEUE

    recaptcha:
      secret: "" # RECAPTCHA_SECRET
      siteKey: "" # RECAPTCHA_SITEKEY
      threshold: "" # RECAPTCHA_THRESHOLD

    twitch:
      clientId: "" # TWITCH_CLIENT_ID
      clientSecret: "" # TWITCH_CLIENT_SECRET

    scores:
      cacheDuration: "" # SCORES_ES_CACHE_DURATION

    scoresRankCache:
      localServer: 0 # SCORES_RANK_CACHE_LOCAL_SERVER
      minUsers: 35000 # SCORES_RANK_CACHE_MIN_USERS
      serverUrl: "" # SCORES_RANK_CACHE_SERVER_URL
      timeout: 10 # SCORES_RANK_CACHE_TIMEOUT

  db:
    host: localhost # DB_HOST
    database: osu # DB_DATABASE
    user: osuweb # DB_USERNAME
    # password: "" # DB_PASSWORD

  dbName:
    chat: "" # default to osu_chat

  redis:
    app: {}
      # host: 127.0.0.1 # REDIS_HOST
      # port: 6379 # REDIS_PORT
      # db: 0 # REDIS_DB
    cache: {}
      # host: 127.0.0.1 # CACHE_REDIS_HOST
      # port: 6379 # CACHE_REDIS_PORT
      # db: 0 # CACHE_REDIS_DB
    notification:
      host: 127.0.0.1 # NOTIFICATION_REDIS_HOST
      port: 6379 # NOTIFICATION_REDIS_PORT
      db: 0 # NOTIFICATION_REDIS_DB

  memcache: {}
    # persistent_id: "" # MEMCACHED_PERSISTENT_ID
    # username: "" # MEMCACHED_USERNAME
    # password: "" # MEMCACHED_PASSWORD
    # host: 127.0.0.1 # MEMCACHED_HOST
    # port: 11211 # MEMCACHED_PORT

  mail: {}
    # driver: log # MAIL_DRIVER
    # host: "" # MAIL_HOST
    # port: "" # MAIL_PORT
    # encryption: "" # MAIL_ENCRYPTION
    # username: "" # MAIL_USERNAME
    # password: "" # MAIL_PASSWORD

  beatmapsProcessor: {}
    # mirrors: 1 # BM_PROCESSOR_MIRRORS
    # thumbnailer: http://localhost:4001 # BM_PROCESSOR_THUMBNAILER
    # sentry: "" # BM_PROCESSOR_SENTRY

  s3:
    default: {}
      # key: "" # S3_KEY
      # secret: "" # S3_SECRET
      # region: "" # S3_REGION
      # bucket: "" # S3_BUCKET
    avatar: {}
      # key: "" # S3_AVATAR_KEY
      # secret: "" # S3_AVATAR_SECRET
      # region: "" # S3_AVATAR_REGION
      # bucket: "" # S3_AVATAR_BUCKET
      # storage: local-avatar # AVATAR_STORAGE
      # cache_purge_prefix: "" # AVATAR_CACHE_PURGE_PREFIX

  elasticsearch:
    # host: localhost:9200 # ES_HOST
    scores: {}
      # host: localhost:9200 # ES_SCORES_HOST
    # indexPrefix: "" # ES_INDEX_PREFIX
    # clientTimeout: 5 # ES_CLIENT_TIMEOUT
    # clientConnectTimeout: 0.5 # ES_CLIENT_CONNECT_TIMEOUT
    # searchTimeout: 5s # ES_SEARCH_TIMEOUT

  notificationServer:
    # publicUrl: /home/notifications/feed # NOTIFICATION_ENDPOINT

replicaCount: 1

image:
  repository: pppy/osu-web
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

osu-notification-server:
  enabled: true
  useSharedSecretsFromOsuWebChart: true

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: osu.ppy.sh
      paths:
      - path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
